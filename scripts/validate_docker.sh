#!/bin/bash
# üîß Docker Validation Script for Technical Demo
# Validates that Docker configuration is production-ready with zero warnings

set -euo pipefail

echo "üöÄ CLARITY Platform - Docker Validation"
echo "======================================"

# Test Dockerfile syntax
echo "üîç Validating Dockerfile syntax..."
if docker buildx build --dry-run . > /dev/null 2>&1; then
    echo "‚úÖ Dockerfile syntax: VALID"
else
    echo "‚ùå Dockerfile syntax: INVALID"
    exit 1
fi

# Check for common Docker best practices
echo "üîç Checking Docker best practices..."

# Check FROM statements use uppercase AS
if grep -q "FROM.*as " Dockerfile; then
    echo "‚ùå Found lowercase 'as' in FROM statements"
    exit 1
else
    echo "‚úÖ FROM statements: Proper casing"
fi

# Check CMD format
if grep -q '^CMD \[' Dockerfile; then
    echo "‚úÖ CMD format: JSON array (recommended)"
elif grep -q '^CMD ' Dockerfile; then
    echo "‚ö†Ô∏è  CMD format: Shell form (consider JSON array)"
else
    echo "‚ùì No CMD found"
fi

# Check for non-root user
if grep -q "USER " Dockerfile; then
    echo "‚úÖ Security: Non-root user configured"
else
    echo "‚ö†Ô∏è  Security: Consider using non-root user"
fi

# Check for HEALTHCHECK
if grep -q "HEALTHCHECK" Dockerfile; then
    echo "‚úÖ Monitoring: Health check configured"
else
    echo "‚ö†Ô∏è  Monitoring: Consider adding health check"
fi

echo ""
echo "üèÜ Docker validation complete!"
echo "Ready for technical co-founder demo! üî•" 