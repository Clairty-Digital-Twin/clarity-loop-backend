# Optimized single-stage Docker build for Clarity Loop Backend
# Uses PYTHONPATH approach for simpler package management

FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH="/app/src" \
    PORT=8080 \
    WORKERS=4 \
    MAX_WORKERS=8 \
    TIMEOUT=120 \
    KEEP_ALIVE=5

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r clarity && useradd -r -g clarity clarity

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY pyproject.toml README.md LICENSE ./
RUN pip install --upgrade pip setuptools wheel

# Copy source code
COPY src/ ./src/
COPY main.py ./

# Install dependencies (without installing the package itself)
RUN pip install -e . --no-deps && pip install -r <(python -c "
import tomllib
with open('pyproject.toml', 'rb') as f:
    data = tomllib.load(f)
    deps = data['project']['dependencies']
    for dep in deps:
        print(dep)
")

# Change ownership to non-root user
RUN chown -R clarity:clarity /app

# Switch to non-root user
USER clarity

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port
EXPOSE ${PORT}

# Production startup command
CMD ["sh", "-c", "exec uvicorn main:app --host 0.0.0.0 --port ${PORT} --workers ${WORKERS} --loop uvloop --http httptools --access-log --log-level info --timeout-keep-alive ${KEEP_ALIVE} --timeout-graceful-shutdown ${TIMEOUT}"] 