# CLARITY AWS Production Dockerfile - FULL APPLICATION
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy and install dependencies first (for better caching)
COPY pyproject.toml LICENSE README.md ./
COPY requirements.txt* ./

# Install Python dependencies - including all needed packages
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir \
    fastapi==0.115.5 \
    uvicorn[standard]==0.32.1 \
    gunicorn==22.0.0 \
    boto3==1.35.0 \
    pydantic==2.10.0 \
    pydantic-settings==2.6.1 \
    google-generativeai==0.8.3 \
    httpx==0.27.2 \
    prometheus-client==0.21.0 \
    python-multipart==0.0.18 \
    numpy \
    pandas \
    torch \
    transformers \
    scikit-learn \
    redis \
    asyncpg \
    alembic \
    python-jose[cryptography] \
    passlib[bcrypt] \
    email-validator \
    google-cloud-aiplatform \
    vertexai

# Copy ENTIRE source directory
COPY src/ ./src/

# Install the clarity package in development mode
RUN pip install -e .

# Copy configuration files
COPY gunicorn.aws.conf.py ./

# Create entrypoint
RUN cat > /app/entrypoint.sh << 'EOF'
#!/bin/sh
set -e
echo "ðŸš€ Starting CLARITY Digital Twin Backend - FULL VERSION"
echo "ðŸ“Š Total API endpoints available"
exec gunicorn -c /app/gunicorn.aws.conf.py clarity.main:app
EOF

RUN chmod +x /app/entrypoint.sh

# Create non-root user for security
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

USER appuser

EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set environment
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

ENTRYPOINT ["/app/entrypoint.sh"]