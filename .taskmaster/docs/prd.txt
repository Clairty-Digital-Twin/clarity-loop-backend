# CLARITY Backend Production Fixes and Test Suite Stabilization

## Overview
The CLARITY backend service requires critical fixes to secure production deployment with HTTPS, achieve 100% green test suite, and ensure robust deployment on AWS ECS. The service is currently deployed on AWS but needs security hardening and comprehensive test fixes.

## Current State
- Service deployed on AWS ECS at http://clarity-alb-1762715656.us-east-1.elb.amazonaws.com
- Custom domain clarity.novamindnyc.com pointing to ALB via CNAME
- 909 tests passing, 5 failing (primarily integration/E2E tests)
- Docker platform issues resolved (must use linux/amd64)
- Authentication working but needs HTTPS

## Goals
1. Secure production deployment with HTTPS on custom domain
2. Fix all failing tests to achieve 100% green baseline
3. Ensure ML model deployment works correctly
4. Implement proper test mocking for all AWS services
5. Maintain deployment stability

## Requirements

### P0 - Critical Production Security & ML Model
- Configure AWS Certificate Manager (ACM) SSL certificate for clarity.novamindnyc.com
- Update ALB to use HTTPS listener on port 443
- Implement HTTP to HTTPS redirect
- Fix ML model file loading issues (PAT model weights)
- Ensure model files are included in Docker image
- Implement proper model path security

### P1 - Test Environment Fixes
- Fix DynamoDB mocking issues (AsyncMock context managers)
- Fix Cognito authentication test mocks
- Handle missing ML model files in test environment
- Fix health data service test async/coroutine issues
- Ensure all integration tests handle service unavailable (503)
- Fix decimal serialization test precision
- Fix email verification test expectations

### P2 - Code Quality & Maintainability
- Implement proper error handling patterns
- Add comprehensive logging
- Ensure consistent exception handling
- Add proper type hints throughout
- Document critical deployment processes

### P3 - Monitoring & Polish
- Set up CloudWatch alarms for service health
- Add deployment validation scripts
- Create runbook for common issues
- Implement health check endpoints

## Technical Specifications

### HTTPS Configuration
- Request ACM certificate for clarity.novamindnyc.com
- Configure ALB with HTTPS listener
- Update security groups to allow port 443
- Implement SSL redirect middleware in FastAPI

### Test Suite Fixes
- Mock all AWS service calls properly
- Handle async context managers in tests
- Fix model file path resolution in tests
- Ensure consistent test data formats

### ML Model Deployment
- Include model files in Docker image
- Implement model integrity verification
- Add fallback for missing model files
- Ensure proper model initialization

## Success Criteria
- All tests passing (100% green)
- HTTPS working on clarity.novamindnyc.com
- Zero downtime deployment
- All ML predictions working correctly
- Comprehensive error handling
- Clean linting and type checking

## Constraints
- Must maintain backwards compatibility
- Cannot modify existing database schema
- Must use existing AWS infrastructure
- Docker images must be built for linux/amd64
- Must preserve existing API contracts